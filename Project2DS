AVL & Hashing
Building a Data Structure for Birzeit University
Departments: e.g. Computer Science, Mathematics, Civil Engineering, Physics, etc.
Step 1: build a sample departments file that contains department information records in the following format:
Department name / Department_related_data_file_name
(e.g. Computer Science / Computer_Science.txt )
Step 2: using the data file created in step 1, build an AVL tree of Department nodes (use department name is key).
Step 3: implement the following functions on counties AVL tree:
• Print out department sorted.
• Search for a specific department
• Insert a new department.
• Delete a specific department.
• Calculate tree height.
Step 4: using the Department_related _date_file_name that stored in each tree department node, load the student’s data that stored in each file. The student record data format in these files is as follow:
Student_full_name /Student_ID/ Average/Gender
(e.g. Ahmad Ali/12000199 /85.4/M)
Step 4: create a Hash Table using the student’s data from step 4 (Key: Student_full_name).
Step 5: implement the following functions on student hash table:
• Print hashed table (including empty spots).
• Print out table size.
• Print out used hash function.
• Insert a new record to hash table.
• Search for a specific record.
• Delete a specific record.
• Save hash table back to file.
